scp_program -> proc_bridge_del(* 

	-> rrel_params: ... (*

		-> rrel_1: rrel_in: _graph;;
		-> rrel_2: rrel_out: _min;;
		-> rrel_3: rrel_in: _best_cut;;
    *);;

    -> rrel_operators: ... (*

		-> rrel_init: ..proc_bridge_del_min_cut_initialize (*

			<- varAssign;;
			-> rrel_1: rrel_assign: rrel_scp_var: _min_cut;;
			-> rrel_2: rrel_fixed: rrel_scp_const: [100];;

			=> nrel_goto: ..proc_bridge_del_min_cut_best_initialize;;
		*);;


		->..proc_bridge_del_min_cut_best_initialize (*

			<- varAssign;;
			-> rrel_1: rrel_assign: rrel_scp_var: _min_cut_best;;
			-> rrel_2: rrel_fixed: rrel_scp_const: _min;;

			=> nrel_goto: ..proc_bridge_search_arcs_unvis;;
		*);;


		-> ..proc_bridge_search_arcs_unvis (*

            	<- searchSetStr5;;
            	-> rrel_1: rrel_fixed: rrel_scp_var: _graph;;
            	-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: arc1;;
            	-> rrel_3: rrel_assign: rrel_scp_var: _graph_arc;;
            	-> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc2;;
            	-> rrel_5: rrel_fixed: rrel_scp_const: rrel_arc;;

	       	-> rrel_set_3: rrel_assign: rrel_scp_var: rrel_node: _unvisedges;;

            	=> nrel_then: ..proc_bridge_search_vert_unvis;;
            	=> nrel_else: ..proc_bridge_return;;
        	*);;


        	-> ..proc_bridge_search_vert_unvis (*

           	<- searchSetStr5;;
            	-> rrel_1: rrel_fixed: rrel_scp_var: _graph;;
            	-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: arc1;;
            	-> rrel_3: rrel_assign: rrel_scp_var: rrel_node: _node;;
            	-> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc2;;
            	-> rrel_5: rrel_fixed: rrel_scp_const: rrel_vertex;;

	        	-> rrel_set_3: rrel_assign: rrel_scp_var: rrel_node: _unvisvert;;

            	=> nrel_then: ..proc_bridge_search_arcs_edges;;
            	=> nrel_else: ..proc_bridge_return;;
        	*);;


        	-> ..proc_bridge_search_arcs_edges (*

            	<- searchSetStr5;;
            	-> rrel_1: rrel_fixed: rrel_scp_var: _graph;;
            	-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: arc1;;
            	-> rrel_3: rrel_assign: rrel_scp_var: _graph_arc;;
            	-> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc2;;
            	-> rrel_5: rrel_fixed: rrel_scp_const: rrel_arc;;

            	-> rrel_set_3: rrel_assign: rrel_scp_var: rrel_node: _edges;;

            	=> nrel_then: ..proc_bridge_unvisedges;;
            	=> nrel_else: ..proc_bridge_return;;
        	*);;


        	-> ..proc_bridge_unvisedges (*

            	<- searchElStr3;;
            	-> rrel_1: rrel_fixed: rrel_scp_var: _unvisedges;;
            	-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc1;;
            	-> rrel_3: rrel_assign: rrel_scp_var: _graph_arc1;;

            	=> nrel_then: ..proc_bridge_er_from_unvisedges;;
            	=> nrel_else: ..proc_bridge_del_temp_del;;
        	*);;


        	-> ..proc_bridge_er_from_unvisedges (*

            	<- eraseEl;;
            	-> rrel_1: rrel_fixed: rrel_scp_var: rrel_erase: _arc1;;

           	 => nrel_goto: ..proc_bridge_edges;;
        	*);;


        	-> ..proc_bridge_edges (*

            	<- searchElStr3;;
            	-> rrel_1: rrel_fixed: rrel_scp_var: _edges;;
            	-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc1;;
            	-> rrel_3: rrel_fixed: rrel_scp_var: _graph_arc1;;

            	=> nrel_then: ..proc_bridge_er_from_edges;;
            	=> nrel_else: ..proc_bridge_return;;
        	*);;


		-> ..proc_bridge_er_from_edges (*

            	<- eraseEl;;
            	-> rrel_1: rrel_fixed: rrel_scp_var: rrel_erase: _arc1;;

            	=> nrel_goto: ..proc_bridge_search_arc_in_graph;;
        	*);;


        	-> ..proc_bridge_search_arc_in_graph (*

            	<- searchElStr3;;
            	-> rrel_1: rrel_assign: rrel_scp_var: rrel_node: _v1;;
            	-> rrel_2: rrel_fixed: rrel_scp_var: _graph_arc1;;
            	-> rrel_3: rrel_assign: rrel_scp_var: rrel_node: _v2;;

            	=> nrel_then: ..proc_bridge_search_reverse_arc_in_graph;;
            	=> nrel_else: ..proc_bridge_return;;
        	*);;


        	-> ..proc_bridge_search_reverse_arc_in_graph (*

            	<- searchElStr3;;
            	-> rrel_1: rrel_fixed: rrel_scp_var: _v2;;
            	-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _graph_arc2;;
            	-> rrel_3: rrel_fixed: rrel_scp_var: _v1;;

            	=> nrel_then: ..proc_bridge_search_reverse_arc_in_unvis;;
            	=> nrel_else: ..proc_bridge_return;;
       	 *);;


        	-> ..proc_bridge_search_reverse_arc_in_unvis (*

            	<- searchElStr3;;
            	-> rrel_1: rrel_fixed: rrel_scp_var: _unvisedges;;
            	-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc1;;
           	-> rrel_3: rrel_fixed: rrel_scp_var: _graph_arc2;;

            	=> nrel_then: ..proc_bridge_er_reverse_from_unvisedges;;
            	=> nrel_else: ..proc_bridge_return;;
        	*);;


        	-> ..proc_bridge_er_reverse_from_unvisedges (*

            	<- eraseEl;;
            	-> rrel_1: rrel_fixed: rrel_scp_var: rrel_erase: _arc1;;
           
            	=> nrel_goto: ..proc_bridge_search_reverse_arc_in_edges;;
        	*);;


        	-> ..proc_bridge_search_reverse_arc_in_edges (*

            	<- searchElStr3;;
            	-> rrel_1: rrel_fixed: rrel_scp_var: _edges;;
            	-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc1;;
            	-> rrel_3: rrel_fixed: rrel_scp_var: _graph_arc2;;

            	=> nrel_then: ..proc_bridge_er_reverse_from_edges;;
            	=> nrel_else: ..proc_bridge_return;;
        	*);;


        	-> ..proc_bridge_er_reverse_from_edges (*

            	<- eraseEl;;
            	-> rrel_1: rrel_fixed: rrel_scp_var: rrel_erase: _arc1;;
           
           	 => nrel_goto: ..proc_bridge_unvisvert;;
        	*);;


        	-> ..proc_bridge_unvisvert (*

            	<- searchElStr3;;
            	-> rrel_1: rrel_fixed: rrel_scp_var: _unvisvert;;
            	-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc1;;
            	-> rrel_3: rrel_fixed: rrel_scp_var: _v1;;

           	 => nrel_goto: ..proc_bridge_smezh;;
        	*);;


        	-> ..proc_bridge_smezh (*

           	<- searchSetStr3;;
           	-> rrel_1: rrel_fixed: rrel_scp_var: _v1;;
           	-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _inz_arc;;
           	-> rrel_3: rrel_assign: rrel_scp_var: rrel_node: _smez_vert1;;

           	-> rrel_set_3: rrel_assign: rrel_scp_var: rrel_node: _smez_vertexes_v1;;

           	=> nrel_goto: ..proc_bridge_er_from_unvisvert;;
        	*);;


        	-> ..proc_bridge_er_from_unvisvert (*

            	<- eraseEl;;
            	-> rrel_1: rrel_fixed: rrel_scp_var: rrel_erase: _arc1;;
           
            	=> nrel_goto: ..proc_bridge_call_bridge_rec;;
        	*);;


        	-> ..proc_bridge_call_bridge_rec (*

            	<- call;;
            	-> rrel_1: rrel_fixed: rrel_scp_const: proc_bridge_rec;;
            	-> rrel_2: rrel_fixed: rrel_scp_const: ...
            	(*
               	-> rrel_1: rrel_fixed: rrel_scp_var: _unvisvert;;
                	-> rrel_2: rrel_fixed: rrel_scp_var: _smez_vertexes_v1;;
                	-> rrel_3: rrel_fixed: rrel_scp_var: _edges;;
                	-> rrel_4: rrel_fixed: rrel_scp_var: _v1;;
            	*);; 
            	-> rrel_3: rrel_assign: rrel_scp_var: _descr2;;

           	 => nrel_goto: ..proc_bridge_wait_bridge_rec;;
        	*);;


        	-> ..proc_bridge_wait_bridge_rec (*

            	<- waitReturn;;
            	-> rrel_1: rrel_fixed: rrel_scp_var: _descr2;;

            	=> nrel_goto: ..proc_bridge_check_unvisvert;;
        	*);;


        	-> ..proc_bridge_check_unvisvert (*

            	<- searchElStr3;;
            	-> rrel_1: rrel_fixed: rrel_scp_var: _unvisvert;;
            	-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc4;;
            	-> rrel_3: rrel_assign: rrel_scp_var: rrel_node: _vert3;;

            	=> nrel_then: ..proc_bridge_get_all_nodes;;
            	=> nrel_else: ..proc_bridge_search_vert_unvis;;
        	*);;


		-> ..proc_bridge_get_all_nodes (*

			<- searchSetStr5;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _v1;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _neccesary_arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _v2;;
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_common: _arc144;;
			-> rrel_5: rrel_assign: rrel_scp_var: _weight;;

			->rrel_set_5: rrel_assign: rrel_scp_var: _all_nodes;;

			=> nrel_then: ..proc_bridge_get_node;;
			=> nrel_else: ..proc_bridge_return;;
		*);;


		-> ..proc_bridge_get_node (*

			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _all_nodes;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _deleted_arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _weight;;

			=> nrel_then: ..proc_bridge_delete_arc;; 
			=> nrel_else: ..proc_bridge_return;;
		*);;


		-> ..proc_bridge_delete_arc (*

			<- eraseEl;;
			-> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _deleted_arc;;

			=> nrel_goto: ..proc_bridge_if_weight;;
		*);;


		-> ..proc_bridge_if_weight (*

			<- searchElStr5;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _weight;;
			-> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc1;;
			-> rrel_3: rrel_assign: rrel_scp_var: _weight_value;;
			-> rrel_4: rrel_assign: rrel_pos: rrel_scp_var: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: nrel_system_identifier;;

			=> nrel_then: ..proc_bridge_if_bolshe;;		
		 	=> nrel_else: ..proc_bridge_get_node;;
		*);;


		-> ..proc_bridge_if_bolshe(*

			<- ifGr;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _min_cut;;
			-> rrel_2: rrel_fixed: rrel_scp_var: _weight_value;;

			=> nrel_then: ..proc_bridge_min_cut_assign_weight_value;;
			=> nrel_else: ..proc_bridge_search_vert_unvis;;
		*);;


		-> ..proc_bridge_min_cut_assign_weight_value (*

			<- varAssign;;
			-> rrel_1: rrel_assign: rrel_scp_var: _min_cut;;
			-> rrel_2: rrel_fixed: rrel_scp_var: _weight_value;;

			=> nrel_goto: ..proc_bridge_search_vert_unvis;;
		*);;


		-> ..proc_bridge_del_temp_del (*

			<- varAssign;;
			-> rrel_1: rrel_assign: rrel_scp_var: _temp_del;;
			-> rrel_2: rrel_fixed: rrel_scp_const: [0];;

			=> nrel_goto: ..proc_del_summ_best_cut_min_cut;;
		*);;	


		-> ..proc_del_summ_best_cut_min_cut (*

			<- contAdd;;
			-> rrel_1: rrel_assign: rrel_scp_var: _temp_del;;
			-> rrel_2: rrel_fixed: rrel_scp_const: _best_cut;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _min_cut;;

			=> nrel_goto: ..proc_bridge_del_bolshe;;
		*);;


		-> ..proc_bridge_del_bolshe (*

			<- ifGr;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _min;;
			-> rrel_2: rrel_fixed: rrel_scp_var: _temp_del;;

			=> nrel_then: ..proc_bridge_del_assign_min_cut_best;;
			=> nrel_else: ..proc_bridge_return;;
		*);;


		-> ..proc_bridge_del_assign_min_cut_best (*

			<- varAssign;;
			-> rrel_1: rrel_assign: rrel_scp_var: _min;;
			-> rrel_2: rrel_fixed: rrel_scp_var: _temp_del;;

			=> nrel_goto: ..proc_bridge_return;;
		*);;	


        	-> ..proc_bridge_return (*

            	<- return;;
        	*);;
    *);;
*);;
